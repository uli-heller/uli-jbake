ext.uliContextPath = '/blog';

buildscript {
    repositories {
        //mavenLocal() // needed to use the local JBake 2.3.0 build
        mavenCentral()
        jcenter()
	//maven { url "https://raw.github.com/uli-heller/jbake/mvn-repo/" }
	//maven { url "/home/uli/git/forked/jbake/mvn-repo/" }
    }

    dependencies {
        classpath 'me.champeau.gradle:jbake-gradle-plugin:0.2'
        classpath 'org.asciidoctor:asciidoctorj:1.5.2'
        classpath 'org.freemarker:freemarker:2.3.19'
        classpath 'org.jbake:jbake-core:2.4.0'
        classpath 'org.pegdown:pegdown:1.5.0'
    }
}

apply plugin: 'me.champeau.jbake'
apply plugin: 'jetty'

jbake {
    input = new File(".")
    output = new File("$buildDir/jbake")
    clearCache = true
    //configuration['render.tag'] = 'true'
    //configuration['markdown.extensions']='ALL,-HARDWRAPS'
    configuration['asciidoctor.attributes']="icons,iconsdir=${uliContextPath}/images/icons,source-highlighter=prettify" as String
}

jettyRun {
    httpPort = 8820
    contextPath = uliContextPath
    webAppSourceDirectory = file("$buildDir/jbake")
}

// Re-generate content using JBake before launching the local Jetty server.
jettyRun.dependsOn(jbake)
